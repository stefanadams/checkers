[ -z "$CHECKERS_TOKEN" ] && { echo "Missing CHECKERS_TOKEN"; exit 255; }

CHECKERS_SYSTEM="${CHECKERS_SYSTEM:-$(hostname -f)}"
CMPDIR="${TMPDIR:-/tmp}/checkers"; mkdir -p "$CMPDIR"

function upload {
  date=$(TZ=GMT date '+%a, %d %b %Y %T %Z')
  [ -z "$1" -o -n "$NO_CHECKERS" ] && cat && return
  [ -n "$CHECKERS_DEBUG" ] && tee=/dev/stderr
  tee ${tee:-/dev/null} | curl -H "Date: $date" -H "Authorization: Bearer $CHECKERS_TOKEN" -F checkers=@- "$1/metrics/$CHECKERS_SYSTEM"
}

function info {
  name="$1"
  command="$2"
  awk="${3:-{print}}"
  /usr/bin/env bash -c "$command" | awk "$awk" | while IFS=$'\t' read message _name; do
    echo -e "${GROUP:-$CHECKERS_SYSTEM}\t${CATEGORY:-System}\t$name$_name\tinfo\t\t\t\t$message\t"
  done
}

function check {
  what="$1"; shift
  name="$1"
  command="$2"
  awk="$3"
  comparison="$4"
  threshold="$5"
  breach_message="$6"

  case "$what" in
    value)
      #echo "/usr/bin/env bash -c '$command' | awk '$awk' | cut -d. -f1 | cut -d, -f1"
      #/usr/bin/env bash -c "$command" | awk "$awk" | cut -d. -f1 | cut -d, -f1
      /usr/bin/env bash -c "$command" | awk "$awk" | cut -d. -f1 | cut -d, -f1 | while IFS=$'\t' read result _name _message; do
        result=$(looks_like_number "$result")
        #[ -n "$_name" ] && _name=" - $_name"
        echo -e "${GROUP:-$CHECKERS_SYSTEM}\t${CATEGORY:-System}\t$name$_name\t$what\t$result\t$comparison\t$threshold\t$breach_message$_message\t$SUPRESS"
      done
      ;;
    count)
      result=$(looks_like_number "$(/usr/bin/env bash -c "$command" | awk "$awk" | wc -l)")
      echo -e "${GROUP:-$CHECKERS_SYSTEM}\t${CATEGORY:-System}\t$name\t$what\t$result\t$comparison\t$threshold\t$breach_message\t$SUPRESS"
      ;;
    change)
      for file in "$@"; do
        [ -f "$file" -a ! -f "$CMPDIR/$file" ] && cp --parents "$file" "$CMPDIR\t$SUPRESS"
        diff "$CMPDIR/$file" "$file" &>/dev/null
        result=$(looks_like_number "$?")
        echo -e "${GROUP:-$CHECKERS_SYSTEM}\t${CATEGORY:-System}\t$name\t$what\t$result\t$comparison\t$threshold\tfile changed\t$SUPRESS"
      done
      ;;
    *) echo -e "${GROUP:-$CHECKERS_SYSTEM}\t${CATEGORY:-System}\t$name\t$what\t$result\t$comparison\t$threshold\tinvalid check\t$SUPRESS";;
  esac
} 2>/dev/null

function looks_like_number {
  perl -MScalar::Util=looks_like_number -E '$ARGV[0] =~ s/%$//; looks_like_number($ARGV[0]) and print $ARGV[0]' "$1"
}